// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext {
        compileSdk = 29
        minSdk = 21
        kotlinVersion = "1.3.71"
        ktxVersion = "1.2.0"
        fragmentVersion = "1.2.2"
        activityVersion = "1.1.0"
        appCompatVersion = "1.1.0"
        materialVersion = "1.2.0-alpha05"
        swipeRefreshLayoutVersion = "1.0.0"
        constraintLayoutVersion = "2.0.0-beta4"
        flexboxVersion = "2.0.1"
        lifecycleKtxVersion = "2.2.0"
        lifecycleVersion = "2.2.0"
        navigationVersion = "2.2.1"
        coroutineVersion = "1.3.2"
        roomVersion = "2.2.3"
        pagingVersion = "2.1.0-alpha01"
        daggerVersion = "2.26"
        assistedInjectVersion = "0.5.2"
        retrofitVersion = "2.6.2"
        gsonVersion = "2.8.6"
        rxjavaVersion = "2.2.13"
        rxkotlinVersion = "2.2.0"
        rxandroidVersion = "2.1.1"
        rxlintVersion = "1.7.4"
        workManagerVersion = "2.3.3"
        timberVersion = "4.7.1"
        googlePlayServicesVersion = "17.0.0"

        // Test
        junitVersion = "4.12"
        robolectricVersion = "4.3.1"
        mockitoKotlinVersion = "2.1.0"
        mockitoVersion = "2.23.4"

        testCoreVersion = "1.2.0"
        testArchCoreVersion = "2.1.0"

        testRunnerVersion = "1.3.0-alpha02"
        testEspresso = "3.3.0-alpha02"

        mockkVersion = "1.9.3"
        
        // Tools
        leakCanary = "2.2"
        lintVersion = "26.4.1"
        flipperVersion = "0.33.1"
        soloaderVersion = "0.8.2"
        kotlin_version = '1.3.71'
    }

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.3'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:2.2.1"
    }
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
    }

    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
        kotlinOptions {
            // Enable experimental coroutines APIs, including Flow
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.FlowPreview"
            freeCompilerArgs += "-Xuse-experimental=kotlinx.coroutines.InternalCoroutinesApi"
            freeCompilerArgs += "-Xuse-experimental=kotlin.ExperimentalStdlibApi"
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
