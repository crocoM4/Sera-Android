apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

def configPropertiesFile = rootProject.file("config.properties")
def configProperties = new Properties()
configProperties.load(new FileInputStream(configPropertiesFile))

android {
    compileSdkVersion compileSdk
    defaultConfig {
        applicationId "com.guerra.enrico.sera"
        minSdkVersion minSdk
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "com.guerra.enrico.sera.SeraTestRunner"

        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildTypes {
        debug {
            buildConfigField "String", "ApiBaseUri", configProperties['ApiBaseUri']
        }
        release {
            buildConfigField "String", "ApiBaseUri", configProperties['ApiBaseUri']

            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

kapt {
    correctErrorTypes true
}

dependencies {
    lintChecks project(":lint")

    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(":base")
    implementation project(":base_android")
    implementation project(":models")
    implementation project(":domain")
    implementation project(":workers")
    implementation project(":features:main")
    implementation project(":features:splash")
    implementation project(":features:login")
    implementation project(":features:todos")
    implementation project(":features:goals")
    implementation project(":features:results")
    implementation project(":features:settings")

    implementation project(":common:resources")

    implementation project(":navigation")


    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion"
    implementation "com.google.android.material:material:$materialVersion"
    implementation "com.google.android:flexbox:$flexboxVersion"
    implementation "androidx.core:core-ktx:$ktxVersion"
    implementation "androidx.appcompat:appcompat:$appCompatVersion"
    implementation "androidx.constraintlayout:constraintlayout:$constraintLayoutVersion"
    implementation "androidx.fragment:fragment-ktx:$fragmentVersion"
    implementation "androidx.activity:activity-ktx:$activityVersion"


    // Coroutine
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutineVersion"

    // Architecture Component

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycleVersion"

    // Hilt
    implementation "com.google.dagger:hilt-android:$daggerHiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltVersion"
    implementation "androidx.hilt:hilt-work:$hiltVersion"

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-ktx:$roomVersion"

    // Gson
    implementation "com.google.code.gson:gson:$gsonVersion"

    // Work Manager
    implementation "androidx.work:work-runtime-ktx:$workManagerVersion"

    // Timber
    implementation "com.jakewharton.timber:timber:$timberVersion"

    // Navis
    implementation project(":libraries:navis:navis_annotation")
    kapt project(':libraries:navis:navis_processor')

    // Leak canary
    debugImplementation "com.squareup.leakcanary:leakcanary-android:$leakCanary"

    // Unit Test
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.robolectric:robolectric:$robolectricVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "io.mockk:mockk:$mockkVersion"

    testImplementation "androidx.test:core:$testCoreVersion"
    testImplementation "androidx.arch.core:core-testing:$testArchCoreVersion"

    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$coroutineVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-test:$kotlinVersion"

    kaptTest "androidx.room:room-compiler:$roomVersion"
    kaptTest "com.google.dagger:dagger-compiler:$daggerVersion"

    // Instrument Test
    androidTestImplementation "junit:junit:$junitVersion"

    androidTestImplementation "androidx.test:core-ktx:$testAndroidXVersion"
    androidTestImplementation "androidx.test.ext:junit-ktx:$testJunitVersion"
    androidTestImplementation "androidx.test:runner:$testRunnerVersion"
    androidTestImplementation "androidx.test:rules:$testRulesVersion"
    androidTestImplementation "androidx.arch.core:core-testing:$testArchCoreVersion"

    androidTestImplementation "androidx.test.espresso:espresso-core:$testEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$testEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-idling-resource:$testEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$testEspresso"

    androidTestImplementation "io.mockk:mockk:$mockkVersion"
    androidTestImplementation "io.mockk:mockk-android:$mockkVersion"

    androidTestImplementation  "com.google.dagger:hilt-android-testing:$daggerHiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$daggerHiltVersion"

    androidTestImplementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltVersion"
    kaptAndroidTest "androidx.hilt:hilt-compiler:$hiltVersion"
    androidTestImplementation "androidx.hilt:hilt-work:$hiltVersion"

}
